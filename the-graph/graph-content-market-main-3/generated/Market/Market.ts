// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ItemBought extends ethereum.Event {
  get params(): ItemBought__Params {
    return new ItemBought__Params(this);
  }
}

export class ItemBought__Params {
  _event: ItemBought;

  constructor(event: ItemBought) {
    this._event = event;
  }

  get title(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get author(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ItemPosted extends ethereum.Event {
  get params(): ItemPosted__Params {
    return new ItemPosted__Params(this);
  }
}

export class ItemPosted__Params {
  _event: ItemPosted;

  constructor(event: ItemPosted) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get author(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get title(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get fileType(): string {
    return this._event.parameters[4].value.toString();
  }

  get ipfsLink(): string {
    return this._event.parameters[5].value.toString();
  }

  get price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class WinnerPicked extends ethereum.Event {
  get params(): WinnerPicked__Params {
    return new WinnerPicked__Params(this);
  }
}

export class WinnerPicked__Params {
  _event: WinnerPicked;

  constructor(event: WinnerPicked) {
    this._event = event;
  }

  get recentWinner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Market__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getUpkeepNeeded(): boolean {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }
}

export class Market extends ethereum.SmartContract {
  static bind(address: Address): Market {
    return new Market("Market", address);
  }

  checkUpkeep(param0: Bytes): Market__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(param0)
    ]);

    return new Market__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checkUpkeep(
    param0: Bytes
  ): ethereum.CallResult<Market__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Market__checkUpkeepResult(value[0].toBoolean(), value[1].toBytes())
    );
  }

  getLoyalActors(): Array<Address> {
    let result = super.call(
      "getLoyalActors",
      "getLoyalActors():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getLoyalActors(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getLoyalActors",
      "getLoyalActors():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getNumWords(): BigInt {
    let result = super.call("getNumWords", "getNumWords():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getNumWords(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNumWords", "getNumWords():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNumberOfPlayers(): BigInt {
    let result = super.call(
      "getNumberOfPlayers",
      "getNumberOfPlayers():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNumberOfPlayers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumberOfPlayers",
      "getNumberOfPlayers():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPlayer(index: BigInt): Address {
    let result = super.call("getPlayer", "getPlayer(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toAddress();
  }

  try_getPlayer(index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("getPlayer", "getPlayer(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPublisherStatus(): boolean {
    let result = super.call(
      "getPublisherStatus",
      "getPublisherStatus():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getPublisherStatus(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getPublisherStatus",
      "getPublisherStatus():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRecentWinner(): Address {
    let result = super.call(
      "getRecentWinner",
      "getRecentWinner():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getRecentWinner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRecentWinner",
      "getRecentWinner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRequestConfirmations(): BigInt {
    let result = super.call(
      "getRequestConfirmations",
      "getRequestConfirmations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getRequestConfirmations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRequestConfirmations",
      "getRequestConfirmations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSubscriberStatus(): boolean {
    let result = super.call(
      "getSubscriberStatus",
      "getSubscriberStatus():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getSubscriberStatus(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getSubscriberStatus",
      "getSubscriberStatus():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketToken(): Address {
    let result = super.call("marketToken", "marketToken():(address)", []);

    return result[0].toAddress();
  }

  try_marketToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("marketToken", "marketToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  publishersMapping(param0: Address): boolean {
    let result = super.call(
      "publishersMapping",
      "publishersMapping(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_publishersMapping(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "publishersMapping",
      "publishersMapping(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  s_recentWinner(): Address {
    let result = super.call("s_recentWinner", "s_recentWinner():(address)", []);

    return result[0].toAddress();
  }

  try_s_recentWinner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "s_recentWinner",
      "s_recentWinner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  subscribersMapping(param0: Address): boolean {
    let result = super.call(
      "subscribersMapping",
      "subscribersMapping(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_subscribersMapping(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "subscribersMapping",
      "subscribersMapping(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get marketTokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get vrfCoordinatorV2(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get subscriptionId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get gasLane(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get callbackGasLimit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BasicSubscriptionCall extends ethereum.Call {
  get inputs(): BasicSubscriptionCall__Inputs {
    return new BasicSubscriptionCall__Inputs(this);
  }

  get outputs(): BasicSubscriptionCall__Outputs {
    return new BasicSubscriptionCall__Outputs(this);
  }
}

export class BasicSubscriptionCall__Inputs {
  _call: BasicSubscriptionCall;

  constructor(call: BasicSubscriptionCall) {
    this._call = call;
  }
}

export class BasicSubscriptionCall__Outputs {
  _call: BasicSubscriptionCall;

  constructor(call: BasicSubscriptionCall) {
    this._call = call;
  }
}

export class GetLinkCall extends ethereum.Call {
  get inputs(): GetLinkCall__Inputs {
    return new GetLinkCall__Inputs(this);
  }

  get outputs(): GetLinkCall__Outputs {
    return new GetLinkCall__Outputs(this);
  }
}

export class GetLinkCall__Inputs {
  _call: GetLinkCall;

  constructor(call: GetLinkCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get author(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class GetLinkCall__Outputs {
  _call: GetLinkCall;

  constructor(call: GetLinkCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class PostLinkCall extends ethereum.Call {
  get inputs(): PostLinkCall__Inputs {
    return new PostLinkCall__Inputs(this);
  }

  get outputs(): PostLinkCall__Outputs {
    return new PostLinkCall__Outputs(this);
  }
}

export class PostLinkCall__Inputs {
  _call: PostLinkCall;

  constructor(call: PostLinkCall) {
    this._call = call;
  }

  get author(): string {
    return this._call.inputValues[0].value.toString();
  }

  get title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get fileType(): string {
    return this._call.inputValues[3].value.toString();
  }

  get ipfsLink(): string {
    return this._call.inputValues[4].value.toString();
  }

  get price(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class PostLinkCall__Outputs {
  _call: PostLinkCall;

  constructor(call: PostLinkCall) {
    this._call = call;
  }
}

export class PublisherSubscriptionCall extends ethereum.Call {
  get inputs(): PublisherSubscriptionCall__Inputs {
    return new PublisherSubscriptionCall__Inputs(this);
  }

  get outputs(): PublisherSubscriptionCall__Outputs {
    return new PublisherSubscriptionCall__Outputs(this);
  }
}

export class PublisherSubscriptionCall__Inputs {
  _call: PublisherSubscriptionCall;

  constructor(call: PublisherSubscriptionCall) {
    this._call = call;
  }
}

export class PublisherSubscriptionCall__Outputs {
  _call: PublisherSubscriptionCall;

  constructor(call: PublisherSubscriptionCall) {
    this._call = call;
  }
}

export class RawFulfillRandomWordsCall extends ethereum.Call {
  get inputs(): RawFulfillRandomWordsCall__Inputs {
    return new RawFulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomWordsCall__Outputs {
    return new RawFulfillRandomWordsCall__Outputs(this);
  }
}

export class RawFulfillRandomWordsCall__Inputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get randomWords(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RawFulfillRandomWordsCall__Outputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
